{"version":3,"sources":["webpack:///./src/components/layouts/blog-post-layout.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["Mobile","props","maxWidth","Default","minWidth","ContentArea","title","children","style","padding","marginBottom","marginTop","textAlign","marginLeft","marginRight","HeaderArea","cover","FabButton","onClickHandler","window","history","back","height","width","fluid","backgroundColor","THEME","blogPost","layout","cardMaxWidth","margin","paddingTop","paddingLeft","paddingRight","paddingBottom","node","data","markdownRemark","frontmatter","childImageSharp","dangerouslySetInnerHTML","__html","html","query"],"mappings":"4LAQMA,EAAS,SAAAC,GAAK,OAAI,gBAAC,IAAD,iBAAgBA,EAAhB,CAAuBC,SAAU,QACnDC,EAAU,SAAAF,GAAK,OAAI,gBAAC,IAAD,iBAAgBA,EAAhB,CAAuBG,SAAU,QAiBpDC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAClB,gCACE,gBAAC,EAAD,KACE,gBAAC,IAAD,CAAMC,MAAO,CAAEC,QAAS,KACtB,sBAAID,MAAO,CAAEE,aAAc,GAAIC,UAAW,EAAGC,UAAW,WACrDN,GAEFC,IAGL,gBAAC,EAAD,KACE,gBAAC,IAAD,CAAMC,MAAO,CAAEC,QAAS,KACtB,sBACED,MAAO,CACLE,aAAc,GACdC,UAAW,EACXE,WAAY,GACZC,YAAa,GACbF,UAAW,WAGZN,GAEFC,MAMHQ,EAAa,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,MAGpB,OACE,gCACE,gBAACC,EAAA,EAAD,CAAWC,eAJA,kBAAMC,OAAOC,QAAQC,UAKhC,uBAAKb,MAAO,CAAEc,OAAQ,OAAQC,MAAO,SAClCP,EAAQ,gBAAC,IAAD,CAAOQ,MAAOR,IAAY,QAM5B,cAAiD,IAA9CV,EAA8C,EAA9CA,MAAOU,EAAuC,EAAvCA,MAAOT,EAAgC,EAAhCA,SAC9B,OACE,uBAAKC,MAAO,CAAEiB,gBAAiBC,IAAMC,SAASC,OAAOH,kBACnD,gBAAC,EAAD,KACE,uBACEjB,MAAO,CACLN,SAAUwB,IAAMC,SAASC,OAAOC,aAChCC,OAAQ,SACRC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,cAAe,KAGjB,gBAAC,EAAD,CAAYlB,MAAOA,IACnB,gBAAC,EAAD,CAAaV,MAAOA,GAAQC,KAGhC,gBAAC,EAAD,KACE,gBAAC,EAAD,CAAYS,MAAOA,IACnB,gBAAC,EAAD,CAAaV,MAAOA,GAAQC,MCxFpC,sCAqBe,sBAAyB,IAChC4B,EADgC,EAAtBC,KACEC,eACZrB,EACJmB,EAAKG,YAAYtB,OAASmB,EAAKG,YAAYtB,MAAMuB,gBAC7CJ,EAAKG,YAAYtB,MAAMuB,gBAAgBf,MACvC,KAEN,OACE,gBAAC,EAAD,CAAQlB,MAAO6B,EAAKG,YAAYhC,MAAOU,MAAOA,GAG1C,uBAAKwB,wBAAyB,CAAEC,OAAQN,EAAKO,UAXtC,IAkBFC,EAAQ","file":"component---src-templates-blog-post-tsx-f97acc160e4af4de98ab.js","sourcesContent":["import * as React from \"react\"\nimport Image, { FluidObject } from \"gatsby-image\"\nimport Card from \"@material-ui/core/Card\"\nimport Responsive from \"react-responsive\"\n\nimport THEME from \"../../theme\"\nimport FabButton from \"../shared/FabButton\"\n\nconst Mobile = props => <Responsive {...props} maxWidth={767} />\nconst Default = props => <Responsive {...props} minWidth={768} />\n\ninterface IContentAreaProps {\n  children: React.ReactNode\n  title: string\n}\n\ninterface IHeaderArea {\n  cover: FluidObject\n}\n\ninterface IBlogPostLayout {\n  children: React.ReactNode\n  title: string\n  cover: FluidObject\n}\n\nconst ContentArea = ({ title, children }: IContentAreaProps) => (\n  <>\n    <Default>\n      <Card style={{ padding: 50 }}>\n        <h1 style={{ marginBottom: 30, marginTop: 0, textAlign: \"center\" }}>\n          {title}\n        </h1>\n        {children}\n      </Card>\n    </Default>\n    <Mobile>\n      <Card style={{ padding: 15 }}>\n        <h1\n          style={{\n            marginBottom: 30,\n            marginTop: 0,\n            marginLeft: 70,\n            marginRight: 70,\n            textAlign: \"center\",\n          }}\n        >\n          {title}\n        </h1>\n        {children}\n      </Card>\n    </Mobile>\n  </>\n)\n\nconst HeaderArea = ({ cover }: IHeaderArea) => {\n  const goBack = () => window.history.back()\n\n  return (\n    <>\n      <FabButton onClickHandler={goBack} />\n      <div style={{ height: \"auto\", width: \"auto\" }}>\n        {cover ? <Image fluid={cover} /> : null}\n      </div>\n    </>\n  )\n}\n\nexport default ({ title, cover, children }: IBlogPostLayout) => {\n  return (\n    <div style={{ backgroundColor: THEME.blogPost.layout.backgroundColor }}>\n      <Default>\n        <div\n          style={{\n            maxWidth: THEME.blogPost.layout.cardMaxWidth,\n            margin: \"0 auto\",\n            paddingTop: 40,\n            paddingLeft: 20,\n            paddingRight: 20,\n            paddingBottom: 40,\n          }}\n        >\n          <HeaderArea cover={cover} />\n          <ContentArea title={title}>{children}</ContentArea>\n        </div>\n      </Default>\n      <Mobile>\n        <HeaderArea cover={cover} />\n        <ContentArea title={title}>{children}</ContentArea>\n      </Mobile>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/blog-post-layout\"\nimport { FluidObject } from \"gatsby-image\"\n\ninterface IBlogPost {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        title: string\n        cover: {\n          childImageSharp: {\n            fluid: FluidObject\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default ({ data }: IBlogPost) => {\n  const node = data.markdownRemark\n  const cover =\n    node.frontmatter.cover && node.frontmatter.cover.childImageSharp\n      ? node.frontmatter.cover.childImageSharp.fluid\n      : null\n\n  return (\n    <Layout title={node.frontmatter.title} cover={cover}>\n      {\n        // tslint:disable:react-no-dangerous-html\n        <div dangerouslySetInnerHTML={{ __html: node.html }} />\n        // tslint:enable:react-no-dangerous-html\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $coverImageMaxWidth: Int!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            ... on ImageSharp {\n              fluid(maxWidth: $coverImageMaxWidth) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}