{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/2019-05-25/tips-for-interviewing-software-engineering/","webpackCompilationHash":"43a4ab484307bf25edf1","result":{"data":{"markdownRemark":{"html":"<p>I've been asked to screen quite a few candidates for software engineers over the years and it's typically myself and 1-2 other people. We mix it up with our engineers so I've been teamed up with a mix of good and not so good interviewers. What I think is strange is that interviewers like to go in with the strategy that they are playing some game where they need to stump the interviewee. I'd like to share my strategy on interviewing rather than doing the \"impress me, bro\" tactic:</p>\n<p>DO - Start wide. Allow the candidate to talk about themselves and things that they have worked on. This part is important because it helps give you points to go deeper with the candidate. Pick up on the items that seem to excite them as these are good. Respond positively with body language and affirmation to allow their nerves to settle.</p>\n<p>DON'T - waste time asking questions that can be googled or memorized from a text book. Unless you are looking for a partner in tech trivia, these questions don't reveal skill. </p>\n<p>DO - Back to the first point, ask them questions to go deeper into the topics they were excited about. One of my favorite leads is to say \"Tell me more about (insert topic here), what do you like about it?  What do dislike?\"  The key to that question is the second half, the dislikes.  If they can't answer with what they dislike they are either talking about the world most amazing technology or they really aren't that experienced with it.</p>\n<p>DO - Try to come up with a pairing exercise if your company permits it. If you can't have them code then maybe do some sudo coding exercise. I think it's important to \"turn the tables\" when doing this and sit side by side with them to create that \"we're in this together\" mindset and see how well the candidate can work along side with you.</p>\n<p>DON'T - Do the traditional \"whiteboard\" exercise or ask a candidate to write code with pen and paper.  I caution around this because its not natural. Engineers today are almost never put to this kind of test and pressure in the real world.</p>\n<p>CAUTION - Riddles.  In my opinion, I dislike using riddle questions in an interview. I get caught up in the \"why would anyone need to do that?\" more than the problem solving. For this reason, not ALL engineers are good at puzzles. For example, one of our elite engineers likes to see if candidates can solve a <a href=\"https://www.popularmechanics.com/science/math/a26259/riddle-of-the-week-25-pool-ball-problem/\">problem involving weighing pool balls</a>.  I get the intent to see how you problem solve but to my point earlier, I'm caught up in why I would ever need to weigh pool balls.</p>\n<p>DO - Call out BS. Don't go to great lengths to intentionally trap them in a lie but question when the lines get blurry.</p>\n<p>If you are going to be one who gets called in to interview candidates a lot, I encourage you to find what works best for you but please pass on the impress me bro tactic. The candidate almost always is nervous and put them under more pressure than necessary can make things worse.</p>","frontmatter":{"title":"Tips on how to effectively interview software engineering candidates","cover":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2019-05-25/tips-for-interviewing-software-engineering/","coverImageMaxWidth":800}}}